Variable EstáticaEs una variable que ha sido ubicada estáticamente y cuyo tiempo de vida se extiende durante toda la ejecución del programa. Los valores de variables estáticas se pueden establecer una vez (durante el tiempo de ejecución) o se pueden cambiar en múltiples ocasiones durante la ejecución del programa. La terminología "variable estática" se basa en C y C++, pero también se usa en muchos lenguajes de programación derivados. En lenguajes de diferente origen el mismo concepto puede denominarse "variable global".Ciclos de vida de las variables1. Variables de instancia (u objeto):* Se crean cuando se crea el objeto que las contiene.* Se inicializan por defecto si no se hace de modo explícito* Se destruyen cuando el recolector de basura de Java no encuentra referencias activas para el objeto.2. Variables estáticas o de clase:* Se crean cuando la clas se usa por primera vez* Se inicializan por defecto si no se hace de modo explícito* Suelen existir para el resto del programa3. Variables locales (o de bloque):* Creadas en la sentencia en la que están definidad* No se inicializan por defecto. Contienen datos imprevisibles.* Se destruyen al salir del bloque (en la llave final)Memoria dinámicaEs la memoria solicitada en tiempo de ejecución, por lo que cuanto más memoria se necesite, más se solicita al sistema operativo. El sistema operativo maneja la memoria gracias al uso de punteros, por la misma naturaleza del proceso, se nos impide conocer el tamaño de la memoria necesaria en el momento de compilar.Un dato importante es que como tal, este tipo de datos se crean y se destruyen mientras se ejecuta el programa y por lo tanto la estructura de datos se va dimensionando de forma precisa a los requerimientos del programa.ClaseEs una plantilla para la creación de objetos de datos según el modelo predefinido. Las clases se utilizan para representar entidades o conceptos, como los sustantivos en el lenguaje. Cada clase es un modelo que define un conjunto de variables, el estado, y métodos apropiados para operar con dichos datos, el comportamiento. Cada objeto creado a partir de la clase se denomina instancia de la clase.ObjetoUn objeto es una unidad dentro de un programa de computadora que consta de un estado y de un comportamiento, que a su vez constan respectivamente de datos almacenados y de tareas realizables durante el tiempo de ejecución. Un objeto puede ser creado instanciando una clase.Programacion basada en prototiposProgramación basada en prototipos es un estilo de programación orientada a objetos en el cual los objetos no son creados mediante la instanciación de clases sino mediante la clonación de otros objetos o mediante la escritura de código por parte del programador. De esta forma los objetos ya existentes pueden servir de prototipos para los que el programador necesite crear.HerenciaA través de ella los diseñadores pueden crear nuevas clases partiendo de una clase o de una jerarquía de clases preexistente (ya comprobadas y verificadas) evitando con ello el rediseño, la modificación y verificación de la parte ya implementada. La herencia facilita la creación de objetos a partir de otros ya existentes e implica que una subclase obtiene todo el comportamiento (métodos) y eventualmente los atributos (variables) de su superclase.SobrecargaSobrecarga es la capacidad de un lenguaje de programación, que permite nombrar con el mismo identificador diferentes variables u operaciones.En programación orientada a objetos la sobrecarga se refiere a la posibilidad de tener dos o más funciones con el mismo nombre pero funcionalidad diferente. Es decir, dos o más funciones con el mismo nombre realizan acciones diferentes. El compilador usará una u otra dependiendo de los parámetros usados. A esto se llama también sobrecarga de funciones.